model >>> Sequential(
  (0): Linear(in_features=48, out_features=64, bias=True)
  (1): ReLU()
  (2): Linear(in_features=64, out_features=32, bias=True)
  (3): ReLU()
  (4): Linear(in_features=32, out_features=1, bias=True)
)

train_loss >>> <PandasArray>
[ 440258217.6325507, 440257883.78543514, 440257555.19903505,
  440257230.8141057, 440256910.41061604, 440256592.79382867,
 440256276.95546937, 440255961.94769365,   440255646.839593,
 440255330.98741066,
 ...
 178462059.68450308,  178460823.6908603, 178459588.66639942,
 178458355.43813393,  178457123.0892735,   178455891.969978,
  178454662.1577571,  178453432.7517223, 178452205.46970794,
  178450977.0914181]
Length: 10000, dtype: float64

val_loss >>> <PandasArray>
[ 1904623840.818959, 1904622801.7101364, 1904621784.1850657,
   1904620788.84476, 1904619812.0428588,  1904618847.273594,
  1904617889.057661, 1904616935.9681973, 1904615987.2211711,
 1904615041.1388488,
 ...
   796990022.403456,   796986752.030612,  796983860.4705997,
  796981240.9483666,  796978523.0010341,  796976854.6239016,
  796974910.4112011,   796972683.084563,  796969714.5387003,
  796966371.7146612]
Length: 10000, dtype: float64

cols >>> ['speed-guitrancourt', 'speed-lieusaint', 'speed-lvs-pussay', 'speed-parc-du-gatinais', 'speed-arville', 'speed-boissy-la-riviere', 'speed-angerville-1', 'speed-angerville-2', 'speed-guitrancourt-b', 'speed-lieusaint-b', 'speed-lvs-pussay-b', 'speed-parc-du-gatinais-b', 'speed-arville-b', 'speed-boissy-la-riviere-b', 'speed-angerville-1-b', 'speed-angerville-2-b']

feature_kwargs >>> {'lags_period': [1], 'lags_columns': ['speed-guitrancourt', 'speed-lieusaint', 'speed-lvs-pussay', 'speed-parc-du-gatinais', 'speed-arville', 'speed-boissy-la-riviere', 'speed-angerville-1', 'speed-angerville-2', 'speed-guitrancourt-b', 'speed-lieusaint-b', 'speed-lvs-pussay-b', 'speed-parc-du-gatinais-b', 'speed-arville-b', 'speed-boissy-la-riviere-b', 'speed-angerville-1-b', 'speed-angerville-2-b']}

feature_splits >>> {'train_pctg': 0.8, 'val_pctg': 0.1, 'test_pctg': 0.1}

optimizer >>> Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0003
    weight_decay: 1
)

model_loss >>> {'train': 178449752.0093249, 'val': 796966371.7146612, 'test': 589155032.1605947}

baseline_loss >>> {'train': 307334273.72921234, 'val': 761237228.418886, 'test': 798894036.8904059}

